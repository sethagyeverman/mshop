syntax = "proto3";

package service.order.v1;

option go_package = "mshop/service/order/api/order/v1;v1";
option java_multiple_files = true;
option java_package = "service.order.api.order.v1";

import "order/v1/message.proto";
import "google/api/annotations.proto";

service Order {
    // ========== 购物车管理接口 ==========
    
    // 获取用户的购物车列表
    // 返回指定用户的所有购物车商品信息
    rpc CartItemList(UserInfo) returns(CartItemListResponse) {
        option (google.api.http) = {
            get: "/v1/cart/{id}"
        };
    }
    
    // 添加商品到购物车
    // 如果商品已在购物车中，则累加数量；否则创建新记录
    rpc CreateCartItem(CartItemRequest) returns(ShopCartInfoResponse) {
        option (google.api.http) = {
            post: "/v1/cart"
            body: "*"
        };
    }
    
    // 更新购物车商品信息
    // 可以修改商品数量和选中状态
    rpc UpdateCartItem(CartItemRequest) returns(Empty) {
        option (google.api.http) = {
            put: "/v1/cart/{id}"
            body: "*"
        };
    }
    
    // 删除购物车商品
    // 从购物车中移除指定商品
    rpc DeleteCartItem(CartItemRequest) returns(Empty) {
        option (google.api.http) = {
            delete: "/v1/cart/{id}"
        };
    }

    // ========== 订单管理接口 ==========
    
    // 创建订单
    // 从购物车中选中的商品创建订单，包括扣减库存、生成订单号等操作
    rpc CreateOrder(OrderRequest) returns (OrderInfoResponse) {
        option (google.api.http) = {
            post: "/v1/order"
            body: "*"
        };
    }
    
    // 获取订单列表
    // 支持按用户ID筛选和分页查询
    rpc OrderList(OrderFilterRequest) returns (OrderListResponse) {
        option (google.api.http) = {
            get: "/v1/order"
        };
    }
    
    // 获取订单详情
    // 返回订单基本信息和订单商品明细列表
    rpc OrderDetail(OrderRequest) returns (OrderInfoDetailResponse) {
        option (google.api.http) = {
            get: "/v1/order/{id}"
        };
    }
    
    // 更新订单状态
    // 修改订单的支付状态或配送状态
    rpc UpdateOrderStatus(OrderStatus) returns (Empty) {
        option (google.api.http) = {
            put: "/v1/order/{id}/status"
            body: "*"
        };
    }
}